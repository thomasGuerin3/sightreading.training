worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 1024;
}

http {
  access_log off;

  include mime.types;

  init_by_lua_block {
    local version = _VERSION:match("%d+%.%d+")
    local root = '/Users/thomasguerin/IdeaProjects/sightreading.training/lua_modules'

    package.path =
      root .. '/share/lua/' .. version .. '/?.lua;' ..
      root .. '/share/lua/' .. version .. '/?/init.lua;' ..
      package.path

    package.cpath =
      root .. '/lib/lua/' .. version .. '/?.so;' ..
      package.cpath

    require "lpeg"
    require "socket"
    require "ltn12"
    require "mime"
  }

  server {
    listen ${{PORT}};
    lua_code_cache ${{CODE_CACHE}};

    add_header Cross-Origin-Embedder-Policy require-corp;
    add_header Cross-Origin-Opener-Policy same-origin;

    location / {
      default_type text/html;
      content_by_lua '
        require("lapis").serve("app")
      ';
    }

    location /static/ {
      if ($request_filename ~* \.es6$|\.scss$) {
        return 403;
      }

      access_log off;
      gzip on;
      gzip_types application/x-javascript text/css image/svg+xml;

      alias static/;
    }

    location /sw.js {
      alias static/service_worker.js;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }
  }
}
